image: git-registry.hack-hro.de:443/stadtgestalten/stadtgestalten/build:buster
variables:
    # Do not use the 'build/' subdirectory, since this would get cleanup up during 'dist-deb'.
    # This directory needs to be listed in debian/source/options in 'extend-diff-ignore'.
    virtualenv_directory: "$CI_PROJECT_DIR/gitlab-ci-build-venv"

.populate_virtualenv: &populate_virtualenv
    - virtualenv -p python3 --system-site-packages "$virtualenv_directory"
    - source "$virtualenv_directory/bin/activate"
    - pip install --upgrade pip
    - pip install -r requirements.txt

.build_deb_package:
    script:
        - *populate_virtualenv
        - make dist-deb DEBIAN_BUILDPACKAGE_COMMAND="dpkg-buildpackage --no-sign"
        # turn the symlink of the orig tarball into a real file
        - a=$(ls build/debian/grouprise_*.orig.tar.gz) && cp -L "$a" "$a.tmp" && mv "$a.tmp" "$a"
    artifacts:
        name: grouprise-deb
        paths:
            - build/debian
        exclude:
            # omit the full build directory (including the huge "node_modules" directory)
            - build/debian/grouprise-*/**

make_test:
    stage: test
    script:
        - *populate_virtualenv
        # stadt.settings is required for the tests
        - make app_local_settings
        - make lint
        - make test
    # disable artifacts: otherwise the deb package would be checked by lintian (and fail)
    dependencies: []

# The latest built deb package is available under the following URL:
#   https://git.hack-hro.de/stadtgestalten/stadtgestalten/builds/artifacts/master/raw/build/debian/export/stadtgestalten.deb?job=deb-package
make_deb_package:
    extends: .build_deb_package
    stage: build
    except:
        - tags
    artifacts:
        expire_in: 1w

make_deb_package_release:
    extends: .build_deb_package
    stage: deploy
    only:
        - tags
        - web
    artifacts:
        expire_in: 1000 yrs

deb_package_test:
    stage: test
    dependencies:
      - make_deb_package
    script:
      # we are running autopkgtest manually, thus we need to ensure manually, that all dependencies are fulfilled
      - "apt-get install -y $(grep '^Depends: ' debian/tests/control | cut -f 2- -d ' ' | tr -d ',' | tr ' ' '\n' | sort | uniq | grep -v grouprise)"
      # the package "moreutils" is only a grouprise dependency (not a build dependency), thus it is missing from the docker image
      - apt-get install moreutils
      # Disable minimization of the buster-slim docker image (e.g. removal of files below /usr/share/doc).
      # Otherwise our nginx example configuration is unavailable for the autopkgtest.
      - rm -f /etc/dpkg/dpkg.cfg.d/docker
      - dpkg -i build/debian/grouprise_*.deb build/debian/grouprise-dependencies_*.deb
      - apt-get install -y autopkgtest
      - autopkgtest --no-built-binaries build/debian/grouprise*.dsc -- null
