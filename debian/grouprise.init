#!/lib/init/init-d-script
### BEGIN INIT INFO
# Provides:          grouprise
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: grouprise
# Description:       grouprise web service
### END INIT INFO

DESC="grouprise web service"
NAME=grouprise
DAEMON=/usr/bin/uwsgi
PIDFILE=/run/grouprise/uwsgi.pid
RUN_USER=_grouprise
DAEMON_ARGS="--pidfile $PIDFILE --daemonize2 /var/log/grouprise/uwsgi.log --ini /etc/grouprise/uwsgi.ini"
START_ARGS="--chuid $RUN_USER"

GROUPRISE_LMTPD_IS_RUNNING=$(if service grouprise-lmtpd status >/dev/null 2>&1; then echo 1; else echo 0; fi)


do_stop_prepare() {
    /usr/sbin/service grouprise-tasks stop
    if [ "$GROUPRISE_LMTPD_IS_RUNNING" = 1 ]; then
        /usr/sbin/service grouprise-lmtpd stop
    fi
}

# ensure the restart of related services - otherwise they are not aware of configuration changes
do_restart_prepare() {
    /usr/sbin/service grouprise-tasks restart
    if [ "$GROUPRISE_LMTPD_IS_RUNNING" = 1 ]; then
        /usr/sbin/service grouprise-lmtpd restart
    fi
}

do_start_prepare() {
    mkdir -p /run/grouprise/django-cache /var/log/grouprise
    chown _grouprise: /run/grouprise /run/grouprise/django-cache /var/log/grouprise
    /usr/sbin/service grouprise-tasks start
    if [ "$GROUPRISE_LMTPD_IS_RUNNING" = 1 ]; then
        /usr/sbin/service grouprise-lmtpd start
    fi
}

do_stop_cmd_override() {
    # do not match NAME and DAEMON (being "uwsgi") and send QUIT on stop
    start-stop-daemon --stop --quiet --signal QUIT --user "$RUN_USER" --remove-pidfile --pidfile "$PIDFILE"
}
