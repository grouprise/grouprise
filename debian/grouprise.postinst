#!/bin/sh

set -eu

PKG_USER="_grouprise"
PKG_GROUP="_grouprise"
DIR_ETC="/etc/grouprise"
DIR_HOME="/var/lib/grouprise"
DIR_LOGS="/var/log/grouprise"
DIR_MEDIA="/var/lib/grouprise/media"
DIR_STATIC="/var/lib/grouprise/static"
UWSGI_APP_SYMLINK="/etc/uwsgi/apps-enabled/grouprise.ini"


if [ "$1" = "configure" ]; then
    # configure a random SECRET_KEY - otherwise "migrate" fails
    new_secret_key=$(python3 -c "import secrets; print(secrets.token_urlsafe(32))")
    sed -i "s/^SECRET_KEY = ''$/SECRET_KEY = '$new_secret_key'/" /etc/grouprise/settings.py

    # configure the directory for static ressources (assembled during postinst)
    if ! grep -q '^STATIC_ROOT\b' /etc/grouprise/settings.py; then
        echo "STATIC_ROOT = '$DIR_STATIC'" >>/etc/grouprise/settings.py
    fi

    if ! grep -q '^MEDIA_ROOT\b' /etc/grouprise/settings.py; then
        echo "MEDIA_ROOT = '$DIR_MEDIA'" >>/etc/grouprise/settings.py
    fi

    if ! getent group "$PKG_GROUP" >/dev/null; then
        # "--force-badname" is required for Buster (the Debian Policy was changed for Bullseye)
        addgroup --quiet --system --force-badname "$PKG_GROUP"
    fi

    if ! getent passwd "$PKG_USER" >/dev/null; then
        # "--force-badname" is required for Buster (the Debian Policy was changed for Bullseye)
        adduser --quiet --system --disabled-password \
            --force-badname \
            --ingroup "$PKG_GROUP" --home "$DIR_HOME" "$PKG_USER"
    fi

    if [ -e "$UWSGI_APP_SYMLINK" ]; then
        if grouprisectl migrate --no-input >/dev/null; then
            rm -f "$DIR_ETC/maintenance_mode"
        else
            echo "error while executing $PKG_USER migrations. maintenance mode still active (indicator file: $DIR_ETC/maintenance_mode)" >&2
        fi
        # restart uwsgi
        if [ -d /run/systemd/system ]; then
            deb-systemd-invoke restart uwsgi.service >/dev/null || true
        else
            invoke-rc.d --skip-systemd-native uwsgi restart || true
        fi
    fi

    # protect sensitive content (e.g. database credentials)
    chown "root:$PKG_GROUP" /etc/grouprise/settings.py
    chmod 640 /etc/grouprise/settings.py

    mkdir -p "$DIR_LOGS"
    chown "$PKG_USER:adm" "$DIR_LOGS"

    mkdir -p "$DIR_MEDIA" "$DIR_STATIC"
    chown "$PKG_USER:$PKG_GROUP" "$DIR_MEDIA" "$DIR_STATIC"

    # assemble static assets after an update of the grouprise package
    grouprisectl collectstatic --no-input
fi

if [ "$1" = "triggered" ]; then
    # assemble static assets from related packages
    grouprisectl collectstatic --clear --no-input
fi

# manually trigger byte compilation (since we do not use dh_python3)
if which py3compile >/dev/null; then
    py3compile -p grouprise
fi

set +eu

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
