#!/bin/sh

set -e


CONFIG_DIR=/etc/element-web
WEB_DIR=/var/lib/element-web-installer/htdocs

# This includes wonâ€™t work on systems not based on debian, but should be safe to ignore.
# shellcheck disable=SC1091
. /usr/share/debconf/confmodule
db_version 2.1

# debconf does not work with "set -u", thus we enable it after loading debconf
set -eu


ask_debconf_question() {
    local question="$1"
    local priority="$2"
    local default_value="${3:-}"
    local RET
    # shellcheck disable=SC2030
    if [ -n "$default_value" ] && ( ! db_get "$question" || [ -z "$RET" ] ); then
        # the value is not configured via debconf, yet
        db_set "$question" "$default_value"
    fi
    db_input "$priority" "$question" || true
    # shellcheck disable=SC2119
    db_go || true
    db_get "$question" || true
    # shellcheck disable=SC2031
    printf '%s' "$RET"
}


reconfigure_config_json() {
    local arg="$1"
    jq "$arg" </etc/element-web/config.json | sponge /etc/element-web/config.json
}


configure_element() {
    # determine webserver domain
    local element_domain webserver_type homeserver_name homeserver_info
    webserver_type=$(ask_debconf_question "element-web-installer/configure-webserver" "high")
    if [ "$webserver_type" != "none" ]; then
        element_domain=
        while [ -z "$element_domain" ]; do
            element_domain=$(ask_debconf_question "element-web-installer/domain" "high" "$(hostname -f)")
        done
    fi
    homeserver_name=
    while [ -z "$homeserver_name" ]; do
        homeserver_name=$(ask_debconf_question "element-web-installer/matrix-homeserver-name" "high")
    done
    case "$webserver_type" in
        apache2)
            sed -i "s|ServerName.*$|ServerName $element_domain|g" /etc/apache2/sites-available/element-web.conf
            if [ ! -e "/etc/apache2/sites-enabled/element-web.conf" ]; then
                mkdir -p /etc/apache2/sites-enabled/
                ln -s ../sites-available/element-web.conf /etc/apache2/sites-enabled/
            fi
            if [ -x /usr/sbin/apache2 ]; then
                service apache2 reload || true
            fi
            ;;
        nginx)
            sed -i "s|server_name .*$|server_name $element_domain;|g" /etc/nginx/sites-available/element-web
            if [ ! -e "/etc/nginx/sites-enabled/element-web" ]; then
                mkdir -p /etc/nginx/sites-enabled/
                ln -s ../sites-available/element-web /etc/nginx/sites-enabled/
            fi
            if [ -x /usr/sbin/nginx ]; then
                service nginx reload || true
            fi
            ;;
        none)
            ;;
        *)
            echo >&2 "Ignoring unknown webserver type for element-web: $webserver_type"
            ;;
    esac
    # discover the homeserver information
    if homeserver_info="$(curl --silent --fail "https://$homeserver_name/.well-known/matrix/client")" \
            && [ -n "$homeserver_info" ] \
            && printf '%s' "$homeserver_info" | jq . >/dev/null 2>/dev/null; then
        # inject the "server_name" if it is missing (it is not part of the well-known/matrix/client response)
        if [ -z "$(printf '%s' "$homeserver_info" | jq -r '.["m.homeserver"].server_name // ""' >/dev/null)" ]; then
            homeserver_info=$(printf '%s' "$homeserver_info" | jq '.["m.homeserver"].server_name |= "'"$homeserver_name"'"')
        fi
        reconfigure_config_json '.default_server_config |= '"$homeserver_info"
    else
        reconfigure_config_json '.default_server_config |= {"m.homeserver": {"base_url": "https://'"$homeserver_name"'", "server_name": "'"$homeserver_name"'"}}'
    fi
    # disable statistics gathering
    reconfigure_config_json 'del (.piwik)'
    reconfigure_config_json '.roomDirectory.servers |= ["'"$homeserver_name"'"]'
}


if [ "$1" = "configure" ]; then
    /usr/sbin/element-web-installer upgrade
    if [ ! -e "$CONFIG_DIR/config.json" ]; then
        echo "Creating sample $CONFIG_DIR/config.json. Please adjust its content."
        cp "$WEB_DIR/config.sample.json" "$CONFIG_DIR/config.json"
        # create the symlink to config.json
        /usr/sbin/element-web-installer apply-configuration
    fi
    configure_element
fi

set +eu

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
